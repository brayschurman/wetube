import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { trpc } from "../utils/trpc";
import { useRouter } from "next/router";

const Home: NextPage = () => {
  const [url, setUrl] = useState<string>("");
  const [youtubeId, setYoutubeId] = useState<string>("");
  const [roomName, setRoomName] = useState<string>("");

  const router = useRouter();
  const newRoomMutation = trpc.room.create.useMutation();

  const createRoom = async () => {
    newRoomMutation.mutate(
      { name: roomName },
      {
        onSuccess: (data, variables, context) => {
          // HERERRRRRRRRE
          console.log(data);
          //   window.location.href = "/room/" + data.id;

          // redirect using nextjs router
          router.push("/room/" + data.id);
        },
      }
    );
  };

  function captureRoomName(event: any) {
    setRoomName(event.target.value);
  }

  // function captureUrl(event: any) {
  //     setUrl(event.target.value);
  //     // convert();
  // }

  // async function convert() {
  //     // console.log(url);
  //     if (!url || url.length <= 0) { return; }

  //     setYoutubeId(url.split('=')[1]!);

  //     // https://www.youtube.com/watch?v=YruU1UsrK08
  // }

  return (
    <>
      <Head>
        <title>WeTube</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-black">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            <span className="text-[hsl(280,100%,70%)]">We</span>Tube
          </h1>

          {youtubeId.length <= 0 && (
            <div className="text-xl font-bold text-white">
              Watch Youtube in sync with your friends.
            </div>
          )}

          {youtubeId.length > 0 && (
            <iframe
              width="563"
              height="480"
              src={"https://www.youtube.com/embed/" + youtubeId}
              title="MinimaTube"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowFullScreen
            ></iframe>
          )}

          {/* <div className="w-1/3">
                        <h1>Room Name</h1>
                        <div className="mb-6">
                            <label className="block mb-2 text-sm font-medium text-gray-900 dark:text-white" />
                            <input placeholder="Name your room..." type="text" id="default-input" className="bg-gray-50 border border-gray-300 text-gray-900 text-sm 
                            rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 
                            dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white 
                            dark:focus:ring-blue-500 dark:focus:border-blue-500" onChange={captureRoomName} value={roomName} />
                        </div>
                    </div> */}

          {/* <Link href=></Link> */}
          {newRoomMutation.isError ? (
            <div>
              An error occurred creating your∆í room:{" "}
              {newRoomMutation.error.message}
            </div>
          ) : null}
          <button
            className="w-1/5 rounded-sm bg-white p-2 text-2xl font-bold"
            onClick={() => createRoom()}
            disabled={newRoomMutation.isLoading}
          >
            Start a session
          </button>

          {/* <div className="w-1/2">
                        <div className="mb-6">
                            <label className="block mb-2 text-sm font-medium text-gray-900 dark:text-white" />
                            <input placeholder="Name your room..." type="text" id="default-input" className="bg-gray-50 border border-gray-300 text-gray-900 text-sm 
                            rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 
                            dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white 
                            dark:focus:ring-blue-500 dark:focus:border-blue-500" onChange={captureUrl} value={url} />
                        </div>
                    </div> */}
        </div>
      </main>
    </>
  );
};

export default Home;
